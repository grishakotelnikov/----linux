LS(1)                              User Commands                              LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List  information  about the FILEs (the current directory by default).  Sort
       entries alphabetically if none of -cftuvSUX nor --sort is specified.

       Mandatory arguments to long options are mandatory for short options too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

       --author
              with -l, print the author of each file

       -b, --escape
              print C-style escapes for nongraphic characters

       --block-size=SIZE
              with  -l,  scale  sizes   by   SIZE   when   printing   them;   e.g.,
              '--block-size=M'; see SIZE format below

       -B, --ignore-backups
              do not list implied entries ending with ~

       -c     with  -lt: sort by, and show, ctime (time of last change of file sta‐
              tus information); with -l: show ctime and sort  by  name;  otherwise:
              sort by ctime, newest first

       -C     list entries by columns

       --color[=WHEN]
              color the output WHEN; more info below

       -d, --directory
              list directories themselves, not their contents

       -D, --dired
              generate output designed for Emacs' dired mode

       -f     list all entries in directory order

       -F, --classify[=WHEN]
              append indicator (one of */=>@|) to entries WHEN

       --file-type
              likewise, except do not append '*'

       --format=WORD
              across  -x, commas -m, horizontal -x, long -l, single-column -1, ver‐
              bose -l, vertical -C

       --full-time
              like -l --time-style=full-iso

       -g     like -l, but do not list owner

       --group-directories-first
              group directories before files; can be augmented with  a  --sort  op‐
              tion, but any use of --sort=none (-U) disables grouping

       -G, --no-group
              in a long listing, don't print group names

       -h, --human-readable
              with -l and -s, print sizes like 1K 234M 2G etc.

       --si   likewise, but use powers of 1000 not 1024

       -H, --dereference-command-line
              follow symbolic links listed on the command line

       --dereference-command-line-symlink-to-dir
              follow each command line symbolic link that points to a directory

       --hide=PATTERN
              do  not list implied entries matching shell PATTERN (overridden by -a
              or -A)

       --hyperlink[=WHEN]
              hyperlink file names WHEN

       --indicator-style=WORD
              append indicator with style WORD  to  entry  names:  none  (default),
              slash (-p), file-type (--file-type), classify (-F)

       -i, --inode
              print the index number of each file

       -I, --ignore=PATTERN
              do not list implied entries matching shell PATTERN

       -k, --kibibytes
              default  to 1024-byte blocks for file system usage; used only with -s
              and per directory totals

       -l     use a long listing format

       -L, --dereference
              when showing file information for a symbolic link,  show  information
              for the file the link references rather than for the link itself

       -m     fill width with a comma separated list of entries

       -n, --numeric-uid-gid
              like -l, but list numeric user and group IDs

       -N, --literal
              print entry names without quoting

       -o     like -l, but do not list group information

       -p, --indicator-style=slash
              append / indicator to directories

       -q, --hide-control-chars
              print ? instead of nongraphic characters

       --show-control-chars
              show nongraphic characters as-is (the default, unless program is 'ls'
              and output is a terminal)

       -Q, --quote-name
              enclose entry names in double quotes

       --quoting-style=WORD
              use  quoting  style  WORD  for  entry  names: literal, locale, shell,
              shell-always, shell-escape, shell-escape-always, c, escape (overrides
              QUOTING_STYLE environment variable)

       -r, --reverse
              reverse order while sorting

       -R, --recursive
              list subdirectories recursively

       -s, --size
              print the allocated size of each file, in blocks

       -S     sort by file size, largest first

       --sort=WORD
              sort by WORD instead of name: none (-U), size (-S), time  (-t),  ver‐
              sion (-v), extension (-X), width

       --time=WORD
              select  which  timestamp  used  to display or sort; access time (-u):
              atime, access, use; metadata change time (-c): ctime,  status;  modi‐
              fied  time  (default):  mtime,  modification; birth time: birth, cre‐
              ation;

              with -l, WORD determines which time to show; with  --sort=time,  sort
              by WORD (newest first)

       --time-style=TIME_STYLE
              time/date format with -l; see TIME_STYLE below

       -t     sort by time, newest first; see --time

       -T, --tabsize=COLS
              assume tab stops at each COLS instead of 8

       -u     with  -lt:  sort by, and show, access time; with -l: show access time
              and sort by name; otherwise: sort by access time, newest first

       -U     do not sort; list entries in directory order

       -v     natural sort of (version) numbers within text

       -w, --width=COLS
              set output width to COLS.  0 means no limit

       -x     list entries by lines instead of by columns

       -X     sort alphabetically by entry extension

       -Z, --context
              print any security context of each file

       --zero end each output line with NUL, not newline

       -1     list one file per line

       --help display this help and exit

       --version
              output version information and exit

       The SIZE argument is an integer and optional unit (example: 10K is 10*1024).
       Units are K,M,G,T,P,E,Z,Y,R,Q (powers  of  1024)  or  KB,MB,...  (powers  of
       1000).  Binary prefixes can be used, too: KiB=K, MiB=M, and so on.

       The  TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.
       FORMAT is interpreted like in date(1).  If  FORMAT  is  FORMAT1<newline>FOR‐
       MAT2,  then FORMAT1 applies to non-recent files and FORMAT2 to recent files.
       TIME_STYLE prefixed with 'posix-' takes effect only outside  the  POSIX  lo‐
       cale.   Also  the  TIME_STYLE environment variable sets the default style to
       use.

       The WHEN argument defaults to 'always' and can also be 'auto' or 'never'.

       Using color to distinguish file types is disabled both by default  and  with
       --color=never.   With  --color=auto, ls emits color codes only when standard
       output is connected to a terminal.  The LS_COLORS environment  variable  can
       change the settings.  Use the dircolors(1) command to set it.

   Exit status:
       0      if OK,

       1      if minor problems (e.g., cannot access subdirectory),

       2      if serious trouble (e.g., cannot access command-line argument).

AUTHOR
       Written by Richard M. Stallman and David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to <https://translationproject.org/team/>

COPYRIGHT
       Copyright  ©  2023  Free  Software Foundation, Inc.  License GPLv3+: GNU GPL
       version 3 or later <https://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.  There is
       NO WARRANTY, to the extent permitted by law.

SEE ALSO
       dircolors(1)

       Full documentation <https://www.gnu.org/software/coreutils/ls>
       or available locally via: info '(coreutils) ls invocation'

GNU coreutils 9.4                    April 2024                               LS(1)
CP(1)                              User Commands                              CP(1)

NAME
       cp - copy files and directories

SYNOPSIS
       cp [OPTION]... [-T] SOURCE DEST
       cp [OPTION]... SOURCE... DIRECTORY
       cp [OPTION]... -t DIRECTORY SOURCE...

DESCRIPTION
       Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.

       Mandatory arguments to long options are mandatory for short options too.

       -a, --archive
              same as -dR --preserve=all

       --attributes-only
              don't copy the file data, just the attributes

       --backup[=CONTROL]
              make a backup of each existing destination file

       -b     like --backup but does not accept an argument

       --copy-contents
              copy contents of special files when recursive

       -d     same as --no-dereference --preserve=links

       --debug
              explain how a file is copied.  Implies -v

       -f, --force
              if  an  existing destination file cannot be opened, remove it and try
              again (this option is ignored when the -n option is also used)

       -i, --interactive
              prompt before overwrite (overrides a previous -n option)

       -H     follow command-line symbolic links in SOURCE

       -l, --link
              hard link files instead of copying

       -L, --dereference
              always follow symbolic links in SOURCE

       -n, --no-clobber
              do not overwrite an existing file and do not fail (overrides a -u  or
              previous -i option). See also --update; equivalent to --update=none.

       -P, --no-dereference
              never follow symbolic links in SOURCE

       -p     same as --preserve=mode,ownership,timestamps

       --preserve[=ATTR_LIST]
              preserve the specified attributes

       --no-preserve=ATTR_LIST
              don't preserve the specified attributes

       --parents
              use full source file name under DIRECTORY

       -R, -r, --recursive
              copy directories recursively

       --reflink[=WHEN]
              control clone/CoW copies. See below

       --remove-destination
              remove  each  existing  destination file before attempting to open it
              (contrast with --force)

       --sparse=WHEN
              control creation of sparse files. See below

       --strip-trailing-slashes
              remove any trailing slashes from each SOURCE argument

       -s, --symbolic-link
              make symbolic links instead of copying

       -S, --suffix=SUFFIX
              override the usual backup suffix

       -t, --target-directory=DIRECTORY
              copy all SOURCE arguments into DIRECTORY

       -T, --no-target-directory
              treat DEST as a normal file

       --update[=UPDATE]
              control which existing files are updated;  UPDATE={all,none,older(de‐
              fault)}.  See below

       -u     equivalent to --update[=older]

       -v, --verbose
              explain what is being done

       -x, --one-file-system
              stay on this file system

       -Z     set SELinux security context of destination file to default type

       --context[=CTX]
              like  -Z,  or if CTX is specified then set the SELinux or SMACK secu‐
              rity context to CTX

       --help display this help and exit

       --version
              output version information and exit

       ATTR_LIST is a comma-separated list of attributes. Attributes are 'mode' for
       permissions (including any ACL and xattr permissions), 'ownership' for  user
       and  group,  'timestamps' for file timestamps, 'links' for hard links, 'con‐
       text' for security context, 'xattr' for extended attributes, and  'all'  for
       all attributes.

       By  default,  sparse  SOURCE files are detected by a crude heuristic and the
       corresponding DEST file is made sparse as well.  That is  the  behavior  se‐
       lected  by  --sparse=auto.   Specify --sparse=always to create a sparse DEST
       file whenever the SOURCE file contains a long enough sequence of zero bytes.
       Use --sparse=never to inhibit creation of sparse files.

       UPDATE controls which existing files in the destination are replaced.  'all'
       is the default operation when an --update option is not specified,  and  re‐
       sults  in  all  existing files in the destination being replaced.  'none' is
       similar to the --no-clobber option, in that no files in the destination  are
       replaced,  but  also  skipped files do not induce a failure.  'older' is the
       default operation when --update is specified, and results in files being re‐
       placed if they're older than the corresponding source file.

       When --reflink[=always] is specified, perform a lightweight copy, where  the
       data blocks are copied only when modified.  If this is not possible the copy
       fails, or if --reflink=auto is specified, fall back to a standard copy.  Use
       --reflink=never to ensure a standard copy is performed.

       The  backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.
       The version control method may  be  selected  via  the  --backup  option  or
       through the VERSION_CONTROL environment variable.  Here are the values:

       none, off
              never make backups (even if --backup is given)

       numbered, t
              make numbered backups

       existing, nil
              numbered if numbered backups exist, simple otherwise

       simple, never
              always make simple backups

       As a special case, cp makes a backup of SOURCE when the force and backup op‐
       tions are given and SOURCE and DEST are the same name for an existing, regu‐
       lar file.

AUTHOR
       Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.

REPORTING BUGS
       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to <https://translationproject.org/team/>

COPYRIGHT
       Copyright  ©  2023  Free  Software Foundation, Inc.  License GPLv3+: GNU GPL
       version 3 or later <https://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.  There is
       NO WARRANTY, to the extent permitted by law.

SEE ALSO
       install(1)

       Full documentation <https://www.gnu.org/software/coreutils/cp>
       or available locally via: info '(coreutils) cp invocation'

GNU coreutils 9.4                    April 2024                               CP(1)
CP(1)                              User Commands                              CP(1)

NAME
       cp - copy files and directories

SYNOPSIS
       cp [OPTION]... [-T] SOURCE DEST
       cp [OPTION]... SOURCE... DIRECTORY
       cp [OPTION]... -t DIRECTORY SOURCE...

DESCRIPTION
       Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.

       Mandatory arguments to long options are mandatory for short options too.

       -a, --archive
              same as -dR --preserve=all

       --attributes-only
              don't copy the file data, just the attributes

       --backup[=CONTROL]
              make a backup of each existing destination file

       -b     like --backup but does not accept an argument

       --copy-contents
              copy contents of special files when recursive

       -d     same as --no-dereference --preserve=links

       --debug
              explain how a file is copied.  Implies -v

       -f, --force
              if  an  existing destination file cannot be opened, remove it and try
              again (this option is ignored when the -n option is also used)

       -i, --interactive
              prompt before overwrite (overrides a previous -n option)

       -H     follow command-line symbolic links in SOURCE

       -l, --link
              hard link files instead of copying

       -L, --dereference
              always follow symbolic links in SOURCE

       -n, --no-clobber
              do not overwrite an existing file and do not fail (overrides a -u  or
              previous -i option). See also --update; equivalent to --update=none.

       -P, --no-dereference
              never follow symbolic links in SOURCE

       -p     same as --preserve=mode,ownership,timestamps

       --preserve[=ATTR_LIST]
              preserve the specified attributes

       --no-preserve=ATTR_LIST
              don't preserve the specified attributes

       --parents
              use full source file name under DIRECTORY

       -R, -r, --recursive
              copy directories recursively

       --reflink[=WHEN]
              control clone/CoW copies. See below

       --remove-destination
              remove  each  existing  destination file before attempting to open it
              (contrast with --force)

       --sparse=WHEN
              control creation of sparse files. See below

       --strip-trailing-slashes
              remove any trailing slashes from each SOURCE argument

       -s, --symbolic-link
              make symbolic links instead of copying

       -S, --suffix=SUFFIX
              override the usual backup suffix

       -t, --target-directory=DIRECTORY
              copy all SOURCE arguments into DIRECTORY

       -T, --no-target-directory
              treat DEST as a normal file

       --update[=UPDATE]
              control which existing files are updated;  UPDATE={all,none,older(de‐
              fault)}.  See below

       -u     equivalent to --update[=older]

       -v, --verbose
              explain what is being done

       -x, --one-file-system
              stay on this file system

       -Z     set SELinux security context of destination file to default type

       --context[=CTX]
              like  -Z,  or if CTX is specified then set the SELinux or SMACK secu‐
              rity context to CTX

       --help display this help and exit

       --version
              output version information and exit

       ATTR_LIST is a comma-separated list of attributes. Attributes are 'mode' for
       permissions (including any ACL and xattr permissions), 'ownership' for  user
       and  group,  'timestamps' for file timestamps, 'links' for hard links, 'con‐
       text' for security context, 'xattr' for extended attributes, and  'all'  for
       all attributes.

       By  default,  sparse  SOURCE files are detected by a crude heuristic and the
       corresponding DEST file is made sparse as well.  That is  the  behavior  se‐
       lected  by  --sparse=auto.   Specify --sparse=always to create a sparse DEST
       file whenever the SOURCE file contains a long enough sequence of zero bytes.
       Use --sparse=never to inhibit creation of sparse files.

       UPDATE controls which existing files in the destination are replaced.  'all'
       is the default operation when an --update option is not specified,  and  re‐
       sults  in  all  existing files in the destination being replaced.  'none' is
       similar to the --no-clobber option, in that no files in the destination  are
       replaced,  but  also  skipped files do not induce a failure.  'older' is the
       default operation when --update is specified, and results in files being re‐
       placed if they're older than the corresponding source file.

       When --reflink[=always] is specified, perform a lightweight copy, where  the
       data blocks are copied only when modified.  If this is not possible the copy
       fails, or if --reflink=auto is specified, fall back to a standard copy.  Use
       --reflink=never to ensure a standard copy is performed.

       The  backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.
       The version control method may  be  selected  via  the  --backup  option  or
       through the VERSION_CONTROL environment variable.  Here are the values:

       none, off
              never make backups (even if --backup is given)

       numbered, t
              make numbered backups

       existing, nil
              numbered if numbered backups exist, simple otherwise

       simple, never
              always make simple backups

       As a special case, cp makes a backup of SOURCE when the force and backup op‐
       tions are given and SOURCE and DEST are the same name for an existing, regu‐
       lar file.

AUTHOR
       Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.

REPORTING BUGS
       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to <https://translationproject.org/team/>

COPYRIGHT
       Copyright  ©  2023  Free  Software Foundation, Inc.  License GPLv3+: GNU GPL
       version 3 or later <https://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.  There is
       NO WARRANTY, to the extent permitted by law.

SEE ALSO
       install(1)

       Full documentation <https://www.gnu.org/software/coreutils/cp>
       or available locally via: info '(coreutils) cp invocation'

GNU coreutils 9.4                    April 2024                               CP(1)
